<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>工具环境 on sudo ~</title>
      <link>https://vorblock.cc/categories/%E5%B7%A5%E5%85%B7%E7%8E%AF%E5%A2%83/</link>
      <description>Recent content in 工具环境 on sudo ~</description>
      <generator>Hugo -- gohugo.io</generator>
      <language>zh-CN</language>
      <lastBuildDate>Sun, 19 May 2019 14:50:32 +0800</lastBuildDate>
      
          <atom:link href="https://vorblock.cc/categories/%E5%B7%A5%E5%85%B7%E7%8E%AF%E5%A2%83/index.xml" rel="self" type="application/rss+xml" />
      
      
      <item>
        <title>环境记录</title>
        <link>https://vorblock.cc/post/%E7%8E%AF%E5%A2%83%E8%AE%B0%E5%BD%95/</link>
        <pubDate>Sun, 19 May 2019 14:50:32 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/%E7%8E%AF%E5%A2%83%E8%AE%B0%E5%BD%95/</guid>
        <description>

&lt;blockquote&gt;
&lt;p&gt;用来不时记录平时所用环境配置，以及遇到的各种问题以及解决办法。主要是为了防丢失，以及总是和空气斗志斗勇。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;win10&#34;&gt;Win10&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;日常使用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;wsl&#34;&gt;WSL&lt;/h5&gt;

&lt;p&gt;默认不是root 设置默认root用户。&lt;code&gt;ubuntu config --default-user root&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;on my zsh 装上&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh&#34; target=&#34;_blank&#34;&gt;官方github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;需要先安装&lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH&#34; target=&#34;_blank&#34;&gt;ZSH&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;安装on my zsh:&lt;/p&gt;

&lt;p&gt;via curl：&lt;code&gt;sh -c &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;via wget: &lt;code&gt;sh -c &amp;quot;$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后配置喜欢的 插件+主题。&lt;code&gt;vi ~/.zshrc&lt;/code&gt; 修改&lt;code&gt;plugins&lt;/code&gt;属性&lt;/p&gt;

&lt;p&gt;必备插件git、autojump、zsh-autosuggestions。&lt;a href=&#34;https://github.com/robbyrussell/oh-my-zsh/wiki/Themes&#34; target=&#34;_blank&#34;&gt;主题&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GDB装上+pwndbg+peda+gef&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;wsl的ubuntu不支持x86，所以主要只能调试x64的程序，而且可能会出现莫名其妙的错误。&lt;/p&gt;

&lt;p&gt;不过可以使用qemu来运行x86的程序，调试还是不行会出错。&lt;a href=&#34;https://github.com/Microsoft/WSL/issues/2468&#34; target=&#34;_blank&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;  sudo apt update
  sudo apt install qemu-user-static
  sudo update-binfmts --install i386 /usr/bin/qemu-i386-static --magic &lt;span class=&#34;s1&#34;&gt;&amp;#39;\x7fELF\x01\x01\x01\x03\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x03\x00\x01\x00\x00\x00&amp;#39;&lt;/span&gt; --mask &lt;span class=&#34;s1&#34;&gt;&amp;#39;\xff\xff\xff\xff\xff\xff\xff\xfc\xff\xff\xff\xff\xff\xff\xff\xff\xf8\xff\xff\xff\xff\xff\xff\xff&amp;#39;&lt;/span&gt;
  &lt;span class=&#34;c1&#34;&gt;# 运行下面的一条命令就行跑x86 不过每次打开wsl都得运行一次，很麻烦，可以写脚本自动开启。&lt;/span&gt;
  sudo service binfmt-support start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;pwndbg+peda+gef&lt;/p&gt;

&lt;p&gt;三个都可能用到，三个工具特性不一样。各有强项，所以三个都装，使用脚本&lt;code&gt;gdb.sh&lt;/code&gt;启动选项&lt;/p&gt;

&lt;p&gt;安装pwndbg:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/pwndbg/pwndbg
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; pwndbg
./setup.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;peda:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/longld/peda.git ~/peda
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;source ~/peda/peda.py&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.gdbinit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gef:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# via the install script&lt;/span&gt;
$ wget -q -O- https://github.com/hugsy/gef/raw/master/scripts/gef.sh &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sh
    
&lt;span class=&#34;c1&#34;&gt;# manually&lt;/span&gt;
$ wget -O ~/.gdbinit-gef.py -q https://github.com/hugsy/gef/raw/master/gef.py
$ &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; ~/.gdbinit-gef.py &amp;gt;&amp;gt; ~/.gdbinit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gdb.sh  把该文件放在&lt;code&gt;/usr/local/sbin&lt;/code&gt;  参考&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;function&lt;/span&gt; Mode_change &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;gdbinitfile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;~/.gdbinit    &lt;span class=&#34;c1&#34;&gt;#这个路径按照你的实际情况修改&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;# gdbinitfile=/root/Desktop/mode&lt;/span&gt;
        &lt;span class=&#34;c1&#34;&gt;#路径按照你的实际情况修改&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;peda&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source ~/peda/peda.py&amp;#34;&lt;/span&gt;   
        &lt;span class=&#34;nv&#34;&gt;gef&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source ~/.gdbinit-gef.py&amp;#34;&lt;/span&gt;   
        &lt;span class=&#34;nv&#34;&gt;pwndbg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;source /home/pwndbg/gdbinit.py&amp;#34;&lt;/span&gt;  
    
        &lt;span class=&#34;nv&#34;&gt;sign&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;cat &lt;span class=&#34;nv&#34;&gt;$gdbinitfile&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep -n &lt;span class=&#34;s2&#34;&gt;&amp;#34;#this place is controled by user&amp;#39;s shell&amp;#34;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
           &lt;span class=&#34;c1&#34;&gt;#此处上面的查找内容要和你自己的保持一致&lt;/span&gt;
    
        &lt;span class=&#34;nv&#34;&gt;pattern&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;:#this place is controled by user&amp;#39;s shell&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;sign&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$pattern&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;nv&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;$&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;number+2&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
    
        &lt;span class=&#34;nv&#34;&gt;parameter_add&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;i
        &lt;span class=&#34;nv&#34;&gt;parameter_del&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;location&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;d
    
        &lt;span class=&#34;nv&#34;&gt;message&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;TEST&amp;#34;&lt;/span&gt;
    
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; -eq &lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
                sed -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$parameter_del&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gdbinitfile&lt;/span&gt;
                sed -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$parameter_add&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$peda&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gdbinitfile&lt;/span&gt;
                &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;Please enjoy the peda!\n&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$name&lt;/span&gt; -eq &lt;span class=&#34;s2&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
                sed -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$parameter_del&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gdbinitfile&lt;/span&gt;
                sed -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$parameter_add&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$gef&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gdbinitfile&lt;/span&gt;
                &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;Please enjoy the gef!\n&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
                sed -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$parameter_del&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gdbinitfile&lt;/span&gt;
                sed -i &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$parameter_add&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$pwndbg&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$gdbinitfile&lt;/span&gt;
                &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;Please enjoy the pwndbg!\n&amp;#34;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
    
&lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;Please choose one mode of GDB?\n1.peda    2.gef    3.pwndbg&amp;#34;&lt;/span&gt;
    
&lt;span class=&#34;nb&#34;&gt;read&lt;/span&gt; -p &lt;span class=&#34;s2&#34;&gt;&amp;#34;Input your choice:&amp;#34;&lt;/span&gt; num
    
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$num&lt;/span&gt; -eq &lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
        Mode_change &lt;span class=&#34;nv&#34;&gt;$num&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$num&lt;/span&gt; -eq &lt;span class=&#34;s2&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
        Mode_change &lt;span class=&#34;nv&#34;&gt;$num&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$num&lt;/span&gt; -eq &lt;span class=&#34;s2&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;then&lt;/span&gt;
        Mode_change &lt;span class=&#34;nv&#34;&gt;$num&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
        &lt;span class=&#34;nb&#34;&gt;echo&lt;/span&gt; -e &lt;span class=&#34;s2&#34;&gt;&amp;#34;Error!\nPleasse input right number!&amp;#34;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;fi&lt;/span&gt;
    
gdb &lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$3&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$4&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$5&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$6&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$7&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$8&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$9&lt;/span&gt;#&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;r2全家桶 （逆向调试神器）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;  git clone https://github.com/radare/radare2.git
  &lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; radare2
  sys/install.sh  &lt;span class=&#34;c1&#34;&gt;#Install / Update&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;gcc arm aarch aarch64&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;sudo apt install gcc-arm-linux-gnueabi&lt;/code&gt; 使用命令&lt;code&gt;arm-linux-gnueabi-gcc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo apt install gcc-aarch64-linux-gnu&lt;/code&gt;  使用命令&lt;code&gt;aarch64-linux-gnu-gcc&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;clang+llvm&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;方法一，手动编译安装，费时费力&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;方法二 apt&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;完整方法这个&lt;a href=&#34;http://apt.llvm.org/&#34; target=&#34;_blank&#34;&gt;地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;只写ubuntu 18,04&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;编辑 /etc/apt/sources.list，添加源&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# i386 not available&lt;/span&gt;
deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main
deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main
&lt;span class=&#34;c1&#34;&gt;# 7&lt;/span&gt;
deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main
deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main
&lt;span class=&#34;c1&#34;&gt;# 8&lt;/span&gt;
deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main
deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;添加证书&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;sudo apt-key add -
&lt;span class=&#34;c1&#34;&gt;# Fingerprint: 6084 F3CF 814B 57C1 CF12 EFD5 15CF 4D18 AF4F 7421&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;安装 版本8&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# LLVM&lt;/span&gt;
apt-get install libllvm-8-ocaml-dev libllvm8 llvm-8 llvm-8-dev llvm-8-doc llvm-8-examples llvm-8-runtime
&lt;span class=&#34;c1&#34;&gt;# Clang and co&lt;/span&gt;
apt-get install clang-8 clang-tools-8 clang-8-doc libclang-common-8-dev libclang-8-dev libclang1-8 clang-format-8 python-clang-8
&lt;span class=&#34;c1&#34;&gt;# libfuzzer&lt;/span&gt;
apt-get install libfuzzer-8-dev
&lt;span class=&#34;c1&#34;&gt;# lldb&lt;/span&gt;
apt-get install lldb-8
&lt;span class=&#34;c1&#34;&gt;# lld (linker)&lt;/span&gt;
apt-get install lld-8
&lt;span class=&#34;c1&#34;&gt;# libc++&lt;/span&gt;
apt-get install libc++-8-dev libc++abi-8-dev
&lt;span class=&#34;c1&#34;&gt;# OpenMP&lt;/span&gt;
apt-get install libomp-8-dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;python3+pip&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;apt install python3 python3-pip、python-pip&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;python库&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;frida （hook) 同win下使用&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;pwntools (py2)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;gmpy2 (py2-3)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;r2Frida&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Brida&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;vscode-666&#34;&gt;vscode （666）&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;主要是各种插件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;zh-ch （汉化包）&lt;/li&gt;
&lt;li&gt;background （右下角小萌人）&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;cmder-https-cmder-net-win下强大的终端工具&#34;&gt;&lt;a href=&#34;https://cmder.net/&#34; target=&#34;_blank&#34;&gt;cmder&lt;/a&gt; (Win下强大的终端工具)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cmder.net/&#34; target=&#34;_blank&#34;&gt;官网&lt;/a&gt;下载安装&lt;/li&gt;
&lt;li&gt;简单配置：&lt;/li&gt;
&lt;li&gt;wsl vim 无法使用上下左右键解决&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;py2-py3&#34;&gt;py2-py3&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://www.python.org/&#34; target=&#34;_blank&#34;&gt;官网&lt;/a&gt;找想要的包下载，同时装两个版本。&lt;/p&gt;

&lt;p&gt;修改环境变量，日常使用py3,把py3的环境变量放在前面，去py2的安装目录复制一份python.exe 更名为python2.exe，就可以使用python2作为命令输入。&lt;/p&gt;

&lt;p&gt;pip配置为国内源会快很多&lt;/p&gt;

&lt;h5 id=&#34;java8-jdk最新&#34;&gt;Java8+jdk最新&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html&#34; target=&#34;_blank&#34;&gt;官网下载安装&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下个jdk最新版防止部分工具需要。&lt;/p&gt;

&lt;p&gt;可能有时候还需要配置环境变量JAVA_HOME为JDK路径。&lt;/p&gt;

&lt;h5 id=&#34;golang&#34;&gt;Golang&lt;/h5&gt;

&lt;p&gt;也是只需&lt;a href=&#34;https://golang.google.cn/&#34; target=&#34;_blank&#34;&gt;下载&lt;/a&gt;安装就ok.&lt;/p&gt;

&lt;h5 id=&#34;nodejs&#34;&gt;NodeJS&lt;/h5&gt;

&lt;p&gt;也是只需&lt;a href=&#34;https://nodejs.org/en/&#34; target=&#34;_blank&#34;&gt;下载安装&lt;/a&gt;就ok. 推荐稳定版。&lt;/p&gt;

&lt;p&gt;会默认安装npm，然而下载速度实在太慢，使用淘宝镜像&lt;a href=&#34;https://npm.taobao.org/&#34; target=&#34;_blank&#34;&gt;cnpm&lt;/a&gt; ,用法相同&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install -g cnpm --registry=https://registry.npm.taobao.org&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&#34;git&#34;&gt;git&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://git-scm.com/&#34; target=&#34;_blank&#34;&gt;官网&lt;/a&gt;下载安装完事&lt;/p&gt;

&lt;h5 id=&#34;yarn&#34;&gt;Yarn&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://www.yarnpkg.com/zh-Hant/&#34; target=&#34;_blank&#34;&gt;官网&lt;/a&gt;下载安装完事&lt;/p&gt;

&lt;h5 id=&#34;cmake&#34;&gt;CMake&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://cmake.org/download/&#34; target=&#34;_blank&#34;&gt;下载&lt;/a&gt;安装ok&lt;/p&gt;

&lt;h5 id=&#34;hugo-博客工具&#34;&gt;hugo (博客工具)&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo&#34; target=&#34;_blank&#34;&gt;下载exe&lt;/a&gt;到本地，配置环境变量&lt;/p&gt;

&lt;h5 id=&#34;haskell-stack&#34;&gt;Haskell Stack&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.haskellstack.org/en/stable/README/#how-to-install&#34; target=&#34;_blank&#34;&gt;官方文档&lt;/a&gt;、win直接下载安装&lt;/p&gt;

&lt;h5 id=&#34;startlsback-win下的美化工具&#34;&gt;StartlsBack (win下的美化工具)&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cnbigger.com/330.html&#34; target=&#34;_blank&#34;&gt;下载安装&lt;/a&gt; 配置底部透明和居中&lt;/p&gt;

&lt;h5 id=&#34;notepad-轻便的编辑器&#34;&gt;Notepad++ (轻便的编辑器)&lt;/h5&gt;

&lt;p&gt;&lt;a href=&#34;https://notepad-plus-plus.org/&#34; target=&#34;_blank&#34;&gt;下载安装&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&#34;android-sdk-配置&#34;&gt;Android SDK 配置&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;adb工具 在目录&lt;code&gt;platform-tools&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;emulator、monitor 在&lt;code&gt;tools&lt;/code&gt;下&lt;/li&gt;
&lt;li&gt;NDK-build  在&lt;code&gt;ndk-bundle&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;flutter-google-跨平台框架&#34;&gt;flutter (Google 跨平台框架)&lt;/h5&gt;

&lt;p&gt;有&lt;a href=&#34;https://flutter.dev/&#34; target=&#34;_blank&#34;&gt;官网&lt;/a&gt;了&lt;/p&gt;

&lt;p&gt;下载&lt;a href=&#34;https://flutter.dev/docs/development/tools/sdk/releases#windows&#34; target=&#34;_blank&#34;&gt;SDK&lt;/a&gt;-&amp;gt;配置环境变量&lt;code&gt;flutter\bin&lt;/code&gt; 。添加名为”PUB_HOSTED_URL”和”FLUTTER_STORAGE_BASE_URL”的条目。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Andorid Studio设置&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装插件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Flutter&lt;/code&gt;插件： 支持Flutter开发工作流 (运行、调试、热重载等).&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;Dart&lt;/code&gt;插件： 提供代码分析 (输入代码时进行验证、代码补全等).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;VScode设置&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;安装插件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;flutter&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;genymotion-逍遥android-android-模拟器&#34;&gt;Genymotion+逍遥Android (Android 模拟器)&lt;/h5&gt;

&lt;p&gt;下载安装ok&lt;/p&gt;

&lt;h5 id=&#34;cuda-n卡xxx&#34;&gt;CUDA （N卡xxx)&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;根据自己的显卡官网&lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34; target=&#34;_blank&#34;&gt;下载包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;根据需求安装。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有个坑，如果为pytorch 或TensorFlow做前提 先看看这两支持的版本再安装相应的版本。&lt;/p&gt;

&lt;h5 id=&#34;pytorch&#34;&gt;pytorch&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;需求前置环境也得装好&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://pytorch.org/get-started/locally/&#34; target=&#34;_blank&#34;&gt;官方&lt;/a&gt;有很方便的安装方法 根据不同平台和环境&lt;/p&gt;

&lt;h5 id=&#34;tensorflow-http-www-baidu-com-link-url-aofeaqzsb4aqhwkb6uuy47eeb5qmtcf0-8xfizfoj8isah2g4usrjsxcv1lxp2nx&#34;&gt;&lt;a href=&#34;http://www.baidu.com/link?url=AOFeAQZSb4aqHWKb6uUy47eeb5qMTcf0_8xfIZfoJ8iSah2g4UsrjsXcv1lXP2NX&#34; target=&#34;_blank&#34;&gt;TensorFlow&lt;/a&gt;&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;前置环境查官网&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# GPU版本 py3&lt;/span&gt;
pip3 install tensorflow-gpu  &lt;span class=&#34;c1&#34;&gt;# stable&lt;/span&gt;
pip3 install tf-nightly-gpu  &lt;span class=&#34;c1&#34;&gt;# preview&lt;/span&gt;
pip3 install tensorflow-gpu&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;.0.0-alpha0 &lt;span class=&#34;c1&#34;&gt;##TensorFlow 2.0 Alpha&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;# CPU 版本&lt;/span&gt;
pip3 install --user --upgrade tensorflow&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;tensorflow&lt;/code&gt; - 仅支持 CPU 的最新稳定版（建议新手使用）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tensorflow-gpu&lt;/code&gt; - &lt;a href=&#34;https://tensorflow.google.cn/install/gpu&#34; target=&#34;_blank&#34;&gt;支持 GPU&lt;/a&gt; 的最新稳定版（适用于 Ubuntu 和 Windows）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tf-nightly&lt;/code&gt; - 仅支持 CPU 的预览每夜版（不稳定）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tf-nightly-gpu&lt;/code&gt; - &lt;a href=&#34;https://tensorflow.google.cn/install/gpu&#34; target=&#34;_blank&#34;&gt;支持 GPU&lt;/a&gt; 的预览每夜版（不稳定，适用于 Ubuntu 和 Windows）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tensorflow==2.0.0-alpha0&lt;/code&gt; - 仅支持 CPU 的预览 TF 2.0 Alpha 版（不稳定）&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tensorflow-gpu==2.0.0-alpha0&lt;/code&gt; - &lt;a href=&#34;https://tensorflow.google.cn/install/gpu&#34; target=&#34;_blank&#34;&gt;支持 GPU&lt;/a&gt; 的预览 TF 2.0 Alpha 版（不稳定，Ubuntu 和 Windows）&lt;/p&gt;

&lt;h5 id=&#34;vmware-pro-虚拟机&#34;&gt;VMware pro （虚拟机）&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;装MacOS记录&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;vbox-虚拟机&#34;&gt;VBox （虚拟机）&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;安装拓展包&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;xshell-xftp-free-for-home-school&#34;&gt;Xshell、Xftp (free for Home/School)&lt;/h5&gt;

&lt;p&gt;free 的要去&lt;a href=&#34;https://www.netsarang.com/zh/free-for-home-school/&#34; target=&#34;_blank&#34;&gt;官网下载&lt;/a&gt; 填写信息，邮箱打开链接下载。&lt;/p&gt;

&lt;h5 id=&#34;teamviewer-远程连接&#34;&gt;TeamViewer (远程连接)&lt;/h5&gt;

&lt;h5 id=&#34;各种ide-集成环境-只记录&#34;&gt;各种IDE、集成环境 只记录&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Visual Studio 2017&lt;/li&gt;
&lt;li&gt;Pycharm&lt;/li&gt;
&lt;li&gt;IDEA&lt;/li&gt;
&lt;li&gt;微信web开发工具&lt;/li&gt;
&lt;li&gt;phpStudy&lt;/li&gt;
&lt;li&gt;Android Studio (风扇~~ ~~)&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&#34;other&#34;&gt;Other&lt;/h5&gt;

&lt;p&gt;不做记录&lt;/p&gt;

&lt;h3 id=&#34;ubuntu-18-04&#34;&gt;Ubuntu 18.04&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;一般用来调代码。 大部分配置同上面WSL,只记录不做过多介绍&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h5 id=&#34;on-my-zsh&#34;&gt;on my zsh&lt;/h5&gt;

&lt;h5 id=&#34;gdb-pwndbg-peda-gef&#34;&gt;gdb+pwndbg+peda+gef&lt;/h5&gt;

&lt;h5 id=&#34;美化&#34;&gt;美化&lt;/h5&gt;

&lt;h3 id=&#34;没钱买mac-留记录&#34;&gt;没钱买Mac，留记录&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190519150336.jpg&#34; alt=&#34;穷&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        
      </item>
      
      <item>
        <title>Frida从入门到放弃_1</title>
        <link>https://vorblock.cc/post/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_1/</link>
        <pubDate>Tue, 22 Jan 2019 20:39:26 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_1/</guid>
        <description>

&lt;h3 id=&#34;0x00-frida&#34;&gt;0x00 Frida&lt;/h3&gt;

&lt;p&gt;Frida 官网：&lt;a href=&#34;https://www.frida.re/&#34; target=&#34;_blank&#34;&gt;https://www.frida.re/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;github: &lt;a href=&#34;https://github.com/frida/frida&#34; target=&#34;_blank&#34;&gt;https://github.com/frida/frida&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dynamic instrumentation toolkit for developers, reverse-engineers, and security
researchers.&lt;/p&gt;

&lt;h3 id=&#34;0x01-安装&#34;&gt;0x01 安装&lt;/h3&gt;

&lt;p&gt;用python&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pip install frida-tools&lt;/code&gt; 就一个命令搞定&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Failed to load the Frida native extension: DLL load failed: 找不到指定的模块&lt;/p&gt;

&lt;p&gt;报了这个错 查了大半天 原来我用的版本是基于python3.7编译的。我现在用的3.6.。。。。&lt;/p&gt;

&lt;p&gt;作者真的是脑子一根筋。。。 所以只好升级成3.7.。。。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x02-android环境&#34;&gt;0x02 Android环境&lt;/h3&gt;

&lt;p&gt;设备：小米mix2 运行Android8.0 MIUI10开发版已解锁root&lt;/p&gt;

&lt;p&gt;frida-server: 用的arm64版本&lt;/p&gt;

&lt;p&gt;下载号frida-server  然后adb push 进去&lt;/p&gt;

&lt;p&gt;&lt;code&gt;adb push frida-server /data/local/tmp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后&lt;code&gt;chomd 755 frida-server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;运行&lt;code&gt;./frida-server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190112133452.png&#34; alt=&#34;frida-server&#34; /&gt;&lt;/p&gt;

&lt;p&gt;命令行运行&lt;code&gt;frida-ps -U&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190112133604.png&#34; alt=&#34;frida-ps&#34; /&gt;&lt;/p&gt;

&lt;p&gt;安装成功&lt;/p&gt;
</description>
        
      </item>
      
      <item>
        <title>radare2&#43;cutter使用指南</title>
        <link>https://vorblock.cc/post/radare2&#43;cutter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
        <pubDate>Wed, 02 Jan 2019 20:39:26 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/radare2&#43;cutter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
        <description>

&lt;h3 id=&#34;0x00-介绍&#34;&gt;0x00 介绍&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/radare/radare2&#34; target=&#34;_blank&#34;&gt;radare2&lt;/a&gt; 一个很实用的二进制分析和调试工具&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/radareorg/cutter&#34; target=&#34;_blank&#34;&gt;cutter&lt;/a&gt; 是r2的GUI版。&lt;/p&gt;

&lt;h3 id=&#34;0x01-安装&#34;&gt;0x01 安装&lt;/h3&gt;

&lt;p&gt;支持的平台有如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Windows (since XP), GNU/Linux, OS X, [Net|Free|Open]BSD,
Android, iOS, OSX, QNX, Solaris, Haiku, FirefoxOS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Linux平台下直接&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/radare/radare2
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; radare2
sys/install.sh //&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;or sys/user.sh&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Windows下可以下载二进制安装包安装。官网&lt;a href=&#34;https://www.radare.org/r/&#34; target=&#34;_blank&#34;&gt;下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Windows用户推荐使用Windows下的linux（wsl）来使用， win下更新慢。还是linux下用得舒服（方便，快捷）。&lt;/p&gt;

&lt;h3 id=&#34;0x03-工具介绍&#34;&gt;0x03 工具介绍&lt;/h3&gt;

&lt;p&gt;r2常用的包含有一下组件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rax2 用于数值转换&lt;/li&gt;
&lt;li&gt;rasm2  反汇编和汇编&lt;/li&gt;
&lt;li&gt;rabin2   查看文件格式&lt;/li&gt;
&lt;li&gt;radiff2 对文件进行 diff&lt;/li&gt;
&lt;li&gt;ragg2/ragg2­cc  开发shellcode工具&lt;/li&gt;
&lt;li&gt;rahash2  各种密码算法， hash算法&lt;/li&gt;
&lt;li&gt;radare2 整合了所有工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用帮助直接&lt;code&gt;-h&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rax2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123153746.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rasm2&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123153901.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;E:笔记Typora学习日记assets1542959275318.png&#34; alt=&#34;1542959275318&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rabin2&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154355.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;eg: (&lt;code&gt;-I&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154422.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;radiff2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154448.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ragg2/ragg2­cc&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154514.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rahash2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154604.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;radare2 (最常用) 可缩写为r2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123155156.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;0x04-r2-实战学习&#34;&gt;0x04 r2 实战学习&lt;/h3&gt;

&lt;p&gt;challenge来源于：&lt;a href=&#34;http://reversing.kr&#34; target=&#34;_blank&#34;&gt;http://reversing.kr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;先查看一下文件信息：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123155334.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;GUI?:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123155444.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;用r2载入，自动分析&lt;code&gt;aaa&lt;/code&gt;命令：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123155649.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vv&lt;/code&gt; 命令查看界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123160028.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;注意0x00401080 调用了GetDlgItemTextA&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123160457.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;s 调到main函数，查看main的汇编代码：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123160744.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123160818.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pdc&lt;/code&gt;查看伪代码：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123161145.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;大写的&lt;code&gt;VV&lt;/code&gt;命令查看图形界面 使用hijk来进行界面移动。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123161242.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;看到调用地址0x401020，s跳过去 ；发现没解析 可使用af来解析。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123162026.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;看到GetDlgTemTextA调用：&lt;/p&gt;

&lt;p&gt;函数调用&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123162157.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123162302.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;差不多逻辑就是一直比对字符串，从第二位开始比最后第一位&lt;/p&gt;

&lt;p&gt;得到&lt;code&gt;Ea5yR3versing&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;命令记不住或者想知道有些什么命令可以用就可以加个？号查询&lt;/p&gt;

&lt;h3 id=&#34;0x05-cutter的使用&#34;&gt;0x05 Cutter的使用&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;多图待补&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://legacy.gitbook.com/book/radare/radare2book/details&#34; target=&#34;_blank&#34;&gt;Radare2 Book&lt;/a&gt;&lt;/p&gt;
</description>
        
      </item>
      
      <item>
        <title>Pytorch学习_1安装</title>
        <link>https://vorblock.cc/post/pytorch%E5%AD%A6%E4%B9%A0_1%E5%AE%89%E8%A3%85/</link>
        <pubDate>Sat, 08 Dec 2018 23:40:51 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/pytorch%E5%AD%A6%E4%B9%A0_1%E5%AE%89%E8%A3%85/</guid>
        <description>

&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;

&lt;p&gt;本来想着用&lt;strong&gt;tensorflow&lt;/strong&gt;的 然而GPU版总是报各种各样的BUG&lt;/p&gt;

&lt;p&gt;所以打算入坑一下学pytorch&lt;/p&gt;

&lt;p&gt;配置：win10+i76700HQ+GTX1060+16G&lt;/p&gt;

&lt;p&gt;软件版本：CUDA10+python3.6+pytorch 1 源码编译&lt;/p&gt;

&lt;p&gt;尝试1：官方安装方法不支持 CUDA 10 太坑，社区有编译通过的，所以只有自己编译试试&lt;/p&gt;

&lt;p&gt;报各种异常，但是没停，那就等等&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181204002444.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181204153247.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;CPU被占满，巨卡。&lt;/p&gt;

&lt;p&gt;一觉起来之后：安装失败&lt;/p&gt;

&lt;p&gt;尝试2：等着完全支持CUDA10之后在用GPU跑吧。&lt;/p&gt;

&lt;p&gt;妥协：用阿里云的学生服务器装了CPU的版本：顺便把TensorFlow 也给装了。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181204153129.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;然而 在一个星期之后 pytorch1.0出来了 支持了CUDA10    nice&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip3 install http://download.pytorch.org/whl/cu100/torch-1.0.0-cp36-cp36m-win_amd64.whl
pip3 install torchvision
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181208233904.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;期间没有遇到任何问题 真舒畅。。。&lt;/p&gt;
</description>
        
      </item>
      
      <item>
        <title>PWN 小tools的使用</title>
        <link>https://vorblock.cc/post/pwn-%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Mon, 22 Oct 2018 20:39:26 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/pwn-%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
        <description>

&lt;h3 id=&#34;gcc-编译常用命令&#34;&gt;GCC 编译常用命令&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;不带选项&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;gcc test.c        将test.c预处理、汇编、编译并链接形成可执行文件。这里未指定输出文件，默认输出为a.out。&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-o&lt;/td&gt;
&lt;td&gt;指定生成的输出文件；&lt;/td&gt;
&lt;td&gt;gcc test.c -o test  将test.c预处理、汇编、编译并链接形成可执行文件test。-o选项用来指定输出文件的文件名。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-E&lt;/td&gt;
&lt;td&gt;仅执行编译预处理；&lt;/td&gt;
&lt;td&gt;gcc -E test.c -o test.i   将test.c预处理输出test.i文件。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-S&lt;/td&gt;
&lt;td&gt;将C代码转换为汇编代码；&lt;/td&gt;
&lt;td&gt;gcc -S test.i   将预处理输出文件test.i汇编成test.s文件。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-c&lt;/td&gt;
&lt;td&gt;仅执行编译操作，不进行连接操作。&lt;/td&gt;
&lt;td&gt;gcc -c test.s   将汇编输出文件test.s编译输出test.o文件。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-wall&lt;/td&gt;
&lt;td&gt;显示警告信息；&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;无选项链接&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;gcc test.o -o test 将编译输出文件test.o链接成最终可执行文件test。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-O&lt;/td&gt;
&lt;td&gt;使用编译优化级别1编译程序。级别为1~3，级别越大优化效果越好，但编译时间越长&lt;/td&gt;
&lt;td&gt;gcc -O1 test.c -o test&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td&gt;关掉DEP/NX（堆栈不可执行）&lt;/td&gt;
&lt;td&gt;gcc  -z execstack -o level level.c&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td&gt;关掉Stack Protector/Canary（栈保护）&lt;/td&gt;
&lt;td&gt;gcc -fno-stack-protector -o level level.c&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td&gt;关掉程序ASLR/PIE（程序随机化保护）&lt;/td&gt;
&lt;td&gt;gcc -no-pie level level.c&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td&gt;64位linux下面的GCC编译出一个32位可执行程序&lt;/td&gt;
&lt;td&gt;gcc -m32 -z execstack -fno-stack-protector -o level level.c&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;gdb常用调试命令&#34;&gt;GDB常用调试命令&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;n&#34;&gt;gcc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;                      &lt;span class=&#34;c1&#34;&gt;//在目标文件加入源代码的信息
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;       

&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;                         &lt;span class=&#34;c1&#34;&gt;//开始调试
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;                             &lt;span class=&#34;c1&#34;&gt;//一条一条执行
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;                        &lt;span class=&#34;c1&#34;&gt;//执行下一条，如果函数进入函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backtrace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bt&lt;/span&gt;                  &lt;span class=&#34;c1&#34;&gt;//查看函数调用栈帧
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;locals&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;//查看当前栈帧局部变量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;                       &lt;span class=&#34;c1&#34;&gt;//选择栈帧，再查看局部变量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;                       &lt;span class=&#34;c1&#34;&gt;//打印变量的值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;finish&lt;/span&gt;                        &lt;span class=&#34;c1&#34;&gt;//运行到当前函数返回
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;//修改变量值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;行号或函数名&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;//列出源码
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;undisplay&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;//每次停下显示变量的值/取消跟踪
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;  &lt;span class=&#34;err&#34;&gt;行号或函数名&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;//设置断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;//连续运行
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;breakpoints&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;//查看已经设置的断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;breakpoints&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;//删除某个断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;disable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;breakpoints&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//禁用/启用某个断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;//满足条件才激活断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;                         &lt;span class=&#34;c1&#34;&gt;//重新从程序开头连续执行
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;watch&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;//设置观察点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;watchpoints&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;//查看设置的观察点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;//打印存储器内容，b--每个字节一组，7--7组
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;disassemble&lt;/span&gt;                   &lt;span class=&#34;c1&#34;&gt;//反汇编当前函数或指定函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;si&lt;/span&gt;                            &lt;span class=&#34;c1&#34;&gt;// 一条指令一条指令调试 而 s 是一行一行代码
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;registers&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// 显示所有寄存器的当前值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;esp&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;//查看内存中开始的20个数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ni&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;单步执行不进入&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;si&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;单步执行并进入&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;disas&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;对地址&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr处的指令进行反汇编&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr可以是函数名&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;checksec&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;查看&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elf编译的保护选项&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;查壳&#34;&gt;查壳&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;upx -d file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;objjump&#34;&gt;objjump&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;objdump是二进制文件快速查看工具。   常用命令：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;objdump -d [file]&lt;/code&gt; 查看文件的所有汇编代码&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;objdump -f [file]&lt;/code&gt; 查看文件的每个文件的整体头部摘要&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;####python&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;python -c &amp;quot;...&amp;quot; | ./file&lt;/code&gt; python以命令方式执行并把结果传递给file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python -c &amp;quot;...&amp;quot; | xargs ./file&lt;/code&gt; python以命令方式执行并当作命令行参数传递给file，具体的是：“它的作用是将参数列表转换成小块分段传递给其他命令，以避免参数列表过长的问题。”存在这个命令是因为很多的参数不支持以管道的方式传递。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;os.system()&lt;/code&gt; 创建一个子进程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;os.putenv(&amp;quot;name&amp;quot;, &amp;quot;value&amp;quot;)&lt;/code&gt; 添加一个环境变量&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;pwntools&#34;&gt;pwntools&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;参考
&lt;a href=&#34;http://pwntools.readthedocs.io/en/stable/&#34; target=&#34;_blank&#34;&gt;http://pwntools.readthedocs.io/en/stable/&lt;/a&gt;   （官网介绍）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://brieflyx.me/2015/python-module/pwntools-intro/&#34; target=&#34;_blank&#34;&gt;http://brieflyx.me/2015/python-module/pwntools-intro/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://brieflyx.me/2015/python-module/pwntools-advanced/&#34; target=&#34;_blank&#34;&gt;http://brieflyx.me/2015/python-module/pwntools-advanced/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一般直接用from pwn import * 或者import pwn将所有模块导入到当前命名空间，这条语句还会把os、sys等常用的系统库一并导入。&lt;/p&gt;

&lt;p&gt;常用的模块有下面几个：
- ==asm==:汇编与反汇编
- ==dynelf==:用于远程符号泄露，需要提供leak方法
- ==elf==:对elf文件进行操作
- ==gdb==:配合gdb进行调试
- ==memleak==:用于内存泄漏
- ==shellcraft==: shellcode的生成器
- ==tubes==:包括tubes: 包括tubes.sock, tubes.process, tubes.ssh, tubes.serialtube，分别适用于不同场景的PIPE
- ==utils==:一些实用的小功能，例如CRC计算，cyclic pattern等&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;pwndbg&#34;&gt;pwndbg&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;arena 堆检查&lt;/li&gt;
&lt;li&gt;mp 显示堆&lt;/li&gt;
&lt;li&gt;bins,fastbins,unsorted,smallbins,largebins&lt;/li&gt;
&lt;li&gt;heap&lt;/li&gt;
&lt;li&gt;top_chunk&lt;/li&gt;
&lt;li&gt;procinfo 查看当前进程状态&lt;/li&gt;
&lt;li&gt;rop &lt;code&gt;rop --grep &amp;quot;pop rdi&amp;quot; -- --nojop --nosys --depth 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;search &lt;code&gt;search -s “/bin/sh”&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;vvmap 虚拟内存映射&lt;/li&gt;
&lt;li&gt;telescope 检查内存转储&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      </item>
      
      <item>
        <title>QEMU的安装使用</title>
        <link>https://vorblock.cc/post/qume%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Thu, 09 Aug 2018 19:34:34 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/qume%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid>
        <description>

&lt;h1 id=&#34;qemu的安装使用&#34;&gt;QEMU的安装使用&lt;/h1&gt;

&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;

&lt;p&gt;WIndows：&lt;a href=&#34;https://qemu.weilnetz.de/w64/&#34; target=&#34;_blank&#34;&gt;https://qemu.weilnetz.de/w64/&lt;/a&gt; 下载exe安装就行&lt;/p&gt;

&lt;p&gt;MACOS:&lt;code&gt;brew install qemu&lt;/code&gt;  or &lt;code&gt;sudo port install qemu&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;LINUX：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Arch:&lt;/strong&gt; &lt;code&gt;pacman -S qemu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Debian/Ubuntu:&lt;/strong&gt; &lt;code&gt;apt-get install qemu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fedora:&lt;/strong&gt; &lt;code&gt;dnf install @virtualization&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gentoo:&lt;/strong&gt; &lt;code&gt;emerge --ask app-emulation/qemu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RHEL/CentOS:&lt;/strong&gt; &lt;code&gt;yum install qemu-kvm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SUSE:&lt;/strong&gt; &lt;code&gt;zypper install qemu&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;源码安装：&lt;a href=&#34;https://download.qemu.org/&#34; target=&#34;_blank&#34;&gt;https://download.qemu.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;wget&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://download.qemu.org/qemu-3.0.0-rc1.tar.xz
tar xvJf qemu-3.0.0-rc1.tar.xz
cd qemu-3.0.0-rc1
./configure
make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git://git.qemu.org/qemu.git
cd qemu
git submodule init
git submodule update --recursive
./configure
make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最新的开发发生在主分支上。稳定的树位于名为“稳定x”的分支中。YY分支,X。YY是发布版本。&lt;/p&gt;

&lt;h3 id=&#34;树莓派内核制作-在windows上&#34;&gt;树莓派内核制作（在windows上)&lt;/h3&gt;

&lt;p&gt;下载树莓派系统：&lt;a href=&#34;http://downloads.raspberrypi.org/raspbian/images/&#34; target=&#34;_blank&#34;&gt;http://downloads.raspberrypi.org/raspbian/images/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载qume 的树莓派内核： &lt;a href=&#34;https://github.com/dhruvvyas90/qemu-rpi-kernel&#34; target=&#34;_blank&#34;&gt;https://github.com/dhruvvyas90/qemu-rpi-kernel&lt;/a&gt;   改名为kernel-qemu放在和系统镜像同目录下&lt;/p&gt;

&lt;p&gt;放在了raspbia目录下&lt;/p&gt;

&lt;p&gt;&lt;code&gt;qemu-system-arm.exe -kernel kernel-qemu -cpu arm1176 -m 512 -M versatilepb -dtbversatile-pb.dtb -no-reboot -append &amp;quot;root=/dev/sda2 panic=1rootfstype=ext4 rw&amp;quot; -net nic -net user,hostfwd=tcp::5022-:22 -hda 2018-06-27-raspbian-stretch.img&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;注意自己下载的镜像版本&lt;/p&gt;

&lt;h3 id=&#34;linux上&#34;&gt;Linux上&lt;/h3&gt;

&lt;p&gt;待补充。。。&lt;/p&gt;
</description>
        
      </item>
      
    </channel>
</rss>