<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>工具环境 on root@v</title>
      <link>https://vorblock.cc/categories/%E5%B7%A5%E5%85%B7%E7%8E%AF%E5%A2%83/</link>
      <description>Recent content in 工具环境 on root@v</description>
      <generator>Hugo -- gohugo.io</generator>
      <language>zh-CN</language>
      <lastBuildDate>Sun, 16 Jun 2019 00:12:44 +0800</lastBuildDate>
      
          <atom:link href="https://vorblock.cc/categories/%E5%B7%A5%E5%85%B7%E7%8E%AF%E5%A2%83/index.xml" rel="self" type="application/rss+xml" />
      
      
      <item>
        <title>MobSecVM</title>
        <link>https://vorblock.cc/post/mobsecvm/</link>
        <pubDate>Sun, 16 Jun 2019 00:12:44 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/mobsecvm/</guid>
        <description>

&lt;h3 id=&#34;0x00-前言&#34;&gt;0x00 前言&lt;/h3&gt;

&lt;p&gt;最近不知为何VM-Ubuntu炸了，试了各种方法，折腾了很久之后，终于恢复了。又浪费时间和环境斗志斗勇。自此打算自己弄一个包含了Android安全所需各种工具的环境，做个备份。防止哪天又出各种各样的问题。&lt;/p&gt;

&lt;p&gt;项目地址：[MobSecVM]()&lt;/p&gt;

&lt;p&gt;下载地址：[baiduyun]()、[google_yun]()&lt;/p&gt;

&lt;h3 id=&#34;0x01-环境准备&#34;&gt;0x01 环境准备&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu 18.04 LTS&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Username：mobsec&lt;/p&gt;

&lt;p&gt;Password：mobsec&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Vmware 15&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;0x02-tools-不断补充&#34;&gt;0x02 Tools （不断补充）&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[x] &lt;a href=&#34;http://developer.android.com/tools/studio/index.html&#34; target=&#34;_blank&#34;&gt;AndroidStudio&lt;/a&gt; 开发全家桶带模拟器&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] &lt;a href=&#34;https://github.com/radare/radare2&#34; target=&#34;_blank&#34;&gt;Radare2&lt;/a&gt; 逆向框架&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.frida.re/&#34; target=&#34;_blank&#34;&gt;Frida&lt;/a&gt; Hook工具&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/mwrlabs/drozer&#34; target=&#34;_blank&#34;&gt;Drozer&lt;/a&gt; Android应用程序安全评估框架&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/iBotPeaches/Apktool&#34; target=&#34;_blank&#34;&gt;APKtool&lt;/a&gt; APK逆向工具&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://portswigger.net/burp&#34; target=&#34;_blank&#34;&gt;BurpSuite&lt;/a&gt; 抓改包，安全检测&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://www.wireshark.org/&#34; target=&#34;_blank&#34;&gt;Wireshare&lt;/a&gt; 抓包工具&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] &lt;a href=&#34;https://github.com/MobSF/Mobile-Security-Framework-MobSF&#34; target=&#34;_blank&#34;&gt;MobSF&lt;/a&gt; 应用程序自动化分析框架&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ ] &lt;a href=&#34;https://github.com/androguard/androguard&#34; target=&#34;_blank&#34;&gt;androguard&lt;/a&gt;  一款基于python的逆向工程，恶意软件和软件分析Android应用程序的框架。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] &lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34;&gt;VScode&lt;/a&gt; 编辑器&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ ] &lt;a href=&#34;https://github.com/konloch/bytecode-viewer&#34; target=&#34;_blank&#34;&gt;bytecode-viewer&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[ ] &lt;a href=&#34;https://github.com/programa-stic/barf-project&#34; target=&#34;_blank&#34;&gt;barf&amp;ndash;project&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;[x] &lt;a href=&#34;https://github.com/skylot/jadx&#34; target=&#34;_blank&#34;&gt;jadx&lt;/a&gt; Dex to Java decompiler&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/xtiankisutsa/MARA_Framework&#34; target=&#34;_blank&#34;&gt;MARA_Framework&lt;/a&gt;  Mobile Application Reverse engineering and Analysis Framework.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/AndroBugs/AndroBugs_Framework&#34; target=&#34;_blank&#34;&gt;AndroBugs Framework&lt;/a&gt; Android vulnerability scanner&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/linkedin/qark&#34; target=&#34;_blank&#34;&gt;qark&lt;/a&gt; Tool to look for several security related Android application vulnerabilities&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/payatu/diva-android&#34; target=&#34;_blank&#34;&gt;DIVA&lt;/a&gt; Damn Insecure and vulnerable App for Android&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/dineshshetty/Android-InsecureBankv2&#34; target=&#34;_blank&#34;&gt;InsecureBankv2&lt;/a&gt;  Vulnerable Android application for developers and security enthusiasts to learn about Android insecurities&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/rafaeltoledo/android-security&#34; target=&#34;_blank&#34;&gt;Android Security Sandbox&lt;/a&gt; An app showcase of some techniques to improve Android app security&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/jackMannino/OWASP-GoatDroid-Project&#34; target=&#34;_blank&#34;&gt;GoatDroid&lt;/a&gt; A fully functional and self-contained training environment for educating developers and testers on Android security&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/tanprathan/sievePWN&#34; target=&#34;_blank&#34;&gt;sievePWN&lt;/a&gt; An android application which exploits sieve through android components.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;0x03-小插件&#34;&gt;0x03 小插件&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;on_my_zsh&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://plugins.jetbrains.com/plugin/3847-findbugs-idea&#34; target=&#34;_blank&#34;&gt;FindBugs-IDEA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;0x04-效果图&#34;&gt;0x04 效果图&lt;/h3&gt;
</description>
        
      </item>
      
      <item>
        <title>Frida从入门到放弃_1</title>
        <link>https://vorblock.cc/post/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_1/</link>
        <pubDate>Tue, 22 Jan 2019 20:39:26 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/frida%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83_1/</guid>
        <description>

&lt;h3 id=&#34;0x00-frida&#34;&gt;0x00 Frida&lt;/h3&gt;

&lt;p&gt;Frida 官网：&lt;a href=&#34;https://www.frida.re/&#34; target=&#34;_blank&#34;&gt;https://www.frida.re/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;github: &lt;a href=&#34;https://github.com/frida/frida&#34; target=&#34;_blank&#34;&gt;https://github.com/frida/frida&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dynamic instrumentation toolkit for developers, reverse-engineers, and security
researchers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scriptable&lt;/li&gt;
&lt;li&gt;Portable&lt;/li&gt;
&lt;li&gt;Free&lt;/li&gt;
&lt;li&gt;Battle-tested&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;0x01-安装&#34;&gt;0x01 安装&lt;/h3&gt;

&lt;h5 id=&#34;二进制安装-推荐&#34;&gt;二进制安装 (推荐)&lt;/h5&gt;

&lt;p&gt;pip install frida-tools 就一个命令搞定&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Failed to load the Frida native extension: DLL load failed: 找不到指定的模块&lt;/p&gt;

&lt;p&gt;报了这个错 查了大半天 原来我用的版本是基于python3.7编译的。我现在用的3.6.。。。。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;绑定：二选一就行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip install frida       &lt;span class=&#34;c1&#34;&gt;# Python bindings&lt;/span&gt;
npm install frida       &lt;span class=&#34;c1&#34;&gt;# Node.js bindings&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h5 id=&#34;手动编译&#34;&gt;手动编译&lt;/h5&gt;

&lt;p&gt;依赖：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pip3 install colorama prompt-toolkit pygments&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;make&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MacOS and iOS&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;MAC_CERTID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;frida-cert
&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;IOS_CERTID&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;frida-cert
make&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;frida.sln &lt;span class=&#34;c1&#34;&gt;#VS2017&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;0x02-android环境&#34;&gt;0x02 Android环境&lt;/h3&gt;

&lt;p&gt;设备：小米mix2 运行Android9.0 MIUI10开发版已解锁root&lt;/p&gt;

&lt;p&gt;frida-server: 用的arm64版本&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/frida/frida/releases&#34; target=&#34;_blank&#34;&gt;server文件下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载好对应的 frida-server  然后adb push 进去&lt;/p&gt;

&lt;p&gt;&lt;code&gt;adb push frida-server /data/local/tmp&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后&lt;code&gt;chomd 755 frida-server&lt;/code&gt;修改权限&lt;/p&gt;

&lt;p&gt;运行&lt;code&gt;./frida-server&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190112133452.png&#34; alt=&#34;frida-server&#34; /&gt;&lt;/p&gt;

&lt;p&gt;这几个命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;n&#34;&gt;adb&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;root&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;adb&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;push&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frida-server&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;local&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;adb&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;chmod 755 /data/local/tmp/frida-server&amp;#34;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;adb&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;shell&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;/data/local/tmp/frida-server &amp;amp;&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;查看架构：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190616145105.png&#34; alt=&#34;aarch64&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;0x03-简单测试&#34;&gt;0x03 简单测试&lt;/h3&gt;

&lt;p&gt;命令行运行&lt;code&gt;frida-ps -U&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190112133604.png&#34; alt=&#34;frida-ps&#34; /&gt;&lt;/p&gt;

&lt;p&gt;有显示就是连接成功&lt;/p&gt;

&lt;p&gt;接下来对浏览器进行简单测试&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190616150349.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;frida-trace -U -i open com.android.browser&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190616150506.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;随便点一下浏览器&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190616150623.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;测试Diva&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190616151039.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190616151307.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;frida-trace -U -i &amp;quot;open*&amp;quot; jakhar.aseem.diva&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190616151432.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;进行Hook login.class checkout函数&lt;/p&gt;

&lt;p&gt;逆向过程略&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190616151826.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;HOOK脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Java&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;perfrom&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;######&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;logActivity&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Java&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;use&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;jakhar.aseem.diva.LogActivity&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;logActivity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;checkout&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;implementation&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(){&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hook&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;命令行载入脚本运行&lt;/p&gt;

&lt;p&gt;&lt;code&gt;frida -U jakhar.aseem.diva -l diva1.js --no-pause&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;进入logging关卡 点击check out，成功hook到checkout函数。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://my-md-1253484710.file.myqcloud.com/20190616153553.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;0x04-总结&#34;&gt;0x04 总结&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;算是简单的入门了frida。&lt;/p&gt;

&lt;p&gt;frida还有很多厉害的功能。多读读官方文档，收货会更多。&lt;/p&gt;
</description>
        
      </item>
      
      <item>
        <title>radare2&#43;cutter使用指南</title>
        <link>https://vorblock.cc/post/radare2&#43;cutter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
        <pubDate>Wed, 02 Jan 2019 20:39:26 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/radare2&#43;cutter%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
        <description>

&lt;h3 id=&#34;0x00-介绍&#34;&gt;0x00 介绍&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/radare/radare2&#34; target=&#34;_blank&#34;&gt;radare2&lt;/a&gt; 一个很实用的二进制分析和调试工具&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/radareorg/cutter&#34; target=&#34;_blank&#34;&gt;cutter&lt;/a&gt; 是r2的GUI版。&lt;/p&gt;

&lt;h3 id=&#34;0x01-安装&#34;&gt;0x01 安装&lt;/h3&gt;

&lt;p&gt;支持的平台有如下：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Windows (since XP), GNU/Linux, OS X, [Net|Free|Open]BSD,
Android, iOS, OSX, QNX, Solaris, Haiku, FirefoxOS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Linux平台下直接&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/radare/radare2
&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; radare2
sys/install.sh //&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;or sys/user.sh&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Windows下可以下载二进制安装包安装。官网&lt;a href=&#34;https://www.radare.org/r/&#34; target=&#34;_blank&#34;&gt;下载&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Windows用户推荐使用Windows下的linux（wsl）来使用， win下更新慢。还是linux下用得舒服（方便，快捷）。&lt;/p&gt;

&lt;h3 id=&#34;0x03-工具介绍&#34;&gt;0x03 工具介绍&lt;/h3&gt;

&lt;p&gt;r2常用的包含有一下组件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rax2 用于数值转换&lt;/li&gt;
&lt;li&gt;rasm2  反汇编和汇编&lt;/li&gt;
&lt;li&gt;rabin2   查看文件格式&lt;/li&gt;
&lt;li&gt;radiff2 对文件进行 diff&lt;/li&gt;
&lt;li&gt;ragg2/ragg2­cc  开发shellcode工具&lt;/li&gt;
&lt;li&gt;rahash2  各种密码算法， hash算法&lt;/li&gt;
&lt;li&gt;radare2 整合了所有工具&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用帮助直接&lt;code&gt;-h&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rax2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123153746.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rasm2&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123153901.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;E:笔记Typora学习日记assets1542959275318.png&#34; alt=&#34;1542959275318&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rabin2&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154355.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;eg: (&lt;code&gt;-I&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154422.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;radiff2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154448.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ragg2/ragg2­cc&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154514.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rahash2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123154604.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;radare2 (最常用) 可缩写为r2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123155156.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;0x04-r2-实战学习&#34;&gt;0x04 r2 实战学习&lt;/h3&gt;

&lt;p&gt;challenge来源于：&lt;a href=&#34;http://reversing.kr&#34; target=&#34;_blank&#34;&gt;http://reversing.kr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;先查看一下文件信息：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123155334.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;GUI?:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123155444.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;用r2载入，自动分析&lt;code&gt;aaa&lt;/code&gt;命令：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123155649.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vv&lt;/code&gt; 命令查看界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123160028.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;注意0x00401080 调用了GetDlgItemTextA&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123160457.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;s 调到main函数，查看main的汇编代码：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123160744.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123160818.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pdc&lt;/code&gt;查看伪代码：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123161145.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;大写的&lt;code&gt;VV&lt;/code&gt;命令查看图形界面 使用hijk来进行界面移动。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123161242.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;看到调用地址0x401020，s跳过去 ；发现没解析 可使用af来解析。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123162026.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;看到GetDlgTemTextA调用：&lt;/p&gt;

&lt;p&gt;函数调用&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123162157.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181123162302.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;差不多逻辑就是一直比对字符串，从第二位开始比最后第一位&lt;/p&gt;

&lt;p&gt;得到&lt;code&gt;Ea5yR3versing&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;命令记不住或者想知道有些什么命令可以用就可以加个？号查询&lt;/p&gt;

&lt;h3 id=&#34;0x05-cutter的使用&#34;&gt;0x05 Cutter的使用&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;多图待补&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://legacy.gitbook.com/book/radare/radare2book/details&#34; target=&#34;_blank&#34;&gt;Radare2 Book&lt;/a&gt;&lt;/p&gt;
</description>
        
      </item>
      
      <item>
        <title>Pytorch学习_1安装</title>
        <link>https://vorblock.cc/post/pytorch%E5%AD%A6%E4%B9%A0_1%E5%AE%89%E8%A3%85/</link>
        <pubDate>Sat, 08 Dec 2018 23:40:51 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/pytorch%E5%AD%A6%E4%B9%A0_1%E5%AE%89%E8%A3%85/</guid>
        <description>

&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;

&lt;p&gt;本来想着用&lt;strong&gt;tensorflow&lt;/strong&gt;的 然而GPU版总是报各种各样的BUG&lt;/p&gt;

&lt;p&gt;所以打算入坑一下学pytorch&lt;/p&gt;

&lt;p&gt;配置：win10+i76700HQ+GTX1060+16G&lt;/p&gt;

&lt;p&gt;软件版本：CUDA10+python3.6+pytorch 1 源码编译&lt;/p&gt;

&lt;p&gt;尝试1：官方安装方法不支持 CUDA 10 太坑，社区有编译通过的，所以只有自己编译试试&lt;/p&gt;

&lt;p&gt;报各种异常，但是没停，那就等等&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181204002444.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181204153247.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;CPU被占满，巨卡。&lt;/p&gt;

&lt;p&gt;一觉起来之后：安装失败&lt;/p&gt;

&lt;p&gt;尝试2：等着完全支持CUDA10之后在用GPU跑吧。&lt;/p&gt;

&lt;p&gt;妥协：用阿里云的学生服务器装了CPU的版本：顺便把TensorFlow 也给装了。。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181204153129.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;然而 在一个星期之后 pytorch1.0出来了 支持了CUDA10    nice&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip3 install http://download.pytorch.org/whl/cu100/torch-1.0.0-cp36-cp36m-win_amd64.whl
pip3 install torchvision
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://my-md-1253484710.coscd.myqcloud.com/20181208233904.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;期间没有遇到任何问题 真舒畅。。。&lt;/p&gt;
</description>
        
      </item>
      
      <item>
        <title>PWN 小tools的使用</title>
        <link>https://vorblock.cc/post/pwn-%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Mon, 22 Oct 2018 20:39:26 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/pwn-%E5%B0%8Ftools%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
        <description>

&lt;h3 id=&#34;gcc-编译常用命令&#34;&gt;GCC 编译常用命令&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;不带选项&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;gcc test.c        将test.c预处理、汇编、编译并链接形成可执行文件。这里未指定输出文件，默认输出为a.out。&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-o&lt;/td&gt;
&lt;td&gt;指定生成的输出文件；&lt;/td&gt;
&lt;td&gt;gcc test.c -o test  将test.c预处理、汇编、编译并链接形成可执行文件test。-o选项用来指定输出文件的文件名。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-E&lt;/td&gt;
&lt;td&gt;仅执行编译预处理；&lt;/td&gt;
&lt;td&gt;gcc -E test.c -o test.i   将test.c预处理输出test.i文件。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-S&lt;/td&gt;
&lt;td&gt;将C代码转换为汇编代码；&lt;/td&gt;
&lt;td&gt;gcc -S test.i   将预处理输出文件test.i汇编成test.s文件。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-c&lt;/td&gt;
&lt;td&gt;仅执行编译操作，不进行连接操作。&lt;/td&gt;
&lt;td&gt;gcc -c test.s   将汇编输出文件test.s编译输出test.o文件。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-wall&lt;/td&gt;
&lt;td&gt;显示警告信息；&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;strong&gt;无选项链接&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;gcc test.o -o test 将编译输出文件test.o链接成最终可执行文件test。&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;-O&lt;/td&gt;
&lt;td&gt;使用编译优化级别1编译程序。级别为1~3，级别越大优化效果越好，但编译时间越长&lt;/td&gt;
&lt;td&gt;gcc -O1 test.c -o test&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td&gt;关掉DEP/NX（堆栈不可执行）&lt;/td&gt;
&lt;td&gt;gcc  -z execstack -o level level.c&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td&gt;关掉Stack Protector/Canary（栈保护）&lt;/td&gt;
&lt;td&gt;gcc -fno-stack-protector -o level level.c&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td&gt;关掉程序ASLR/PIE（程序随机化保护）&lt;/td&gt;
&lt;td&gt;gcc -no-pie level level.c&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;/td&gt;
&lt;td&gt;64位linux下面的GCC编译出一个32位可执行程序&lt;/td&gt;
&lt;td&gt;gcc -m32 -z execstack -fno-stack-protector -o level level.c&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;gdb常用调试命令&#34;&gt;GDB常用调试命令&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;n&#34;&gt;gcc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;                      &lt;span class=&#34;c1&#34;&gt;//在目标文件加入源代码的信息
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;out&lt;/span&gt;       

&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;                         &lt;span class=&#34;c1&#34;&gt;//开始调试
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;                             &lt;span class=&#34;c1&#34;&gt;//一条一条执行
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;step&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;                        &lt;span class=&#34;c1&#34;&gt;//执行下一条，如果函数进入函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;backtrace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bt&lt;/span&gt;                  &lt;span class=&#34;c1&#34;&gt;//查看函数调用栈帧
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;locals&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;//查看当前栈帧局部变量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;frame&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;                       &lt;span class=&#34;c1&#34;&gt;//选择栈帧，再查看局部变量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;                       &lt;span class=&#34;c1&#34;&gt;//打印变量的值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;finish&lt;/span&gt;                        &lt;span class=&#34;c1&#34;&gt;//运行到当前函数返回
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;                 &lt;span class=&#34;c1&#34;&gt;//修改变量值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;行号或函数名&lt;/span&gt;             &lt;span class=&#34;c1&#34;&gt;//列出源码
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;undisplay&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;         &lt;span class=&#34;c1&#34;&gt;//每次停下显示变量的值/取消跟踪
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;  &lt;span class=&#34;err&#34;&gt;行号或函数名&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;//设置断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;//连续运行
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;breakpoints&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;//查看已经设置的断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;delete&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;breakpoints&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;//删除某个断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;disable&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;enable&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;breakpoints&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;//禁用/启用某个断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;           &lt;span class=&#34;c1&#34;&gt;//满足条件才激活断点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;                         &lt;span class=&#34;c1&#34;&gt;//重新从程序开头连续执行
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;watch&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;//设置观察点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;watchpoints&lt;/span&gt;            &lt;span class=&#34;c1&#34;&gt;//查看设置的观察点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;//打印存储器内容，b--每个字节一组，7--7组
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;disassemble&lt;/span&gt;                   &lt;span class=&#34;c1&#34;&gt;//反汇编当前函数或指定函数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;si&lt;/span&gt;                            &lt;span class=&#34;c1&#34;&gt;// 一条指令一条指令调试 而 s 是一行一行代码
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;info&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;registers&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;// 显示所有寄存器的当前值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gdb&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;esp&lt;/span&gt;                    &lt;span class=&#34;c1&#34;&gt;//查看内存中开始的20个数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ni&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;单步执行不进入&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;si&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;单步执行并进入&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;disas&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;addr&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;对地址&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr处的指令进行反汇编&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;addr可以是函数名&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;checksec&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;查看&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;elf编译的保护选项&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;查壳&#34;&gt;查壳&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;upx -d file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;objjump&#34;&gt;objjump&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;objdump是二进制文件快速查看工具。   常用命令：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;objdump -d [file]&lt;/code&gt; 查看文件的所有汇编代码&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;objdump -f [file]&lt;/code&gt; 查看文件的每个文件的整体头部摘要&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;####python&lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;python -c &amp;quot;...&amp;quot; | ./file&lt;/code&gt; python以命令方式执行并把结果传递给file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python -c &amp;quot;...&amp;quot; | xargs ./file&lt;/code&gt; python以命令方式执行并当作命令行参数传递给file，具体的是：“它的作用是将参数列表转换成小块分段传递给其他命令，以避免参数列表过长的问题。”存在这个命令是因为很多的参数不支持以管道的方式传递。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;os.system()&lt;/code&gt; 创建一个子进程&lt;/li&gt;
&lt;li&gt;&lt;code&gt;os.putenv(&amp;quot;name&amp;quot;, &amp;quot;value&amp;quot;)&lt;/code&gt; 添加一个环境变量&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;pwntools&#34;&gt;pwntools&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;参考
&lt;a href=&#34;http://pwntools.readthedocs.io/en/stable/&#34; target=&#34;_blank&#34;&gt;http://pwntools.readthedocs.io/en/stable/&lt;/a&gt;   （官网介绍）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://brieflyx.me/2015/python-module/pwntools-intro/&#34; target=&#34;_blank&#34;&gt;http://brieflyx.me/2015/python-module/pwntools-intro/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://brieflyx.me/2015/python-module/pwntools-advanced/&#34; target=&#34;_blank&#34;&gt;http://brieflyx.me/2015/python-module/pwntools-advanced/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一般直接用from pwn import * 或者import pwn将所有模块导入到当前命名空间，这条语句还会把os、sys等常用的系统库一并导入。&lt;/p&gt;

&lt;p&gt;常用的模块有下面几个：
- ==asm==:汇编与反汇编
- ==dynelf==:用于远程符号泄露，需要提供leak方法
- ==elf==:对elf文件进行操作
- ==gdb==:配合gdb进行调试
- ==memleak==:用于内存泄漏
- ==shellcraft==: shellcode的生成器
- ==tubes==:包括tubes: 包括tubes.sock, tubes.process, tubes.ssh, tubes.serialtube，分别适用于不同场景的PIPE
- ==utils==:一些实用的小功能，例如CRC计算，cyclic pattern等&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;pwndbg&#34;&gt;pwndbg&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;arena 堆检查&lt;/li&gt;
&lt;li&gt;mp 显示堆&lt;/li&gt;
&lt;li&gt;bins,fastbins,unsorted,smallbins,largebins&lt;/li&gt;
&lt;li&gt;heap&lt;/li&gt;
&lt;li&gt;top_chunk&lt;/li&gt;
&lt;li&gt;procinfo 查看当前进程状态&lt;/li&gt;
&lt;li&gt;rop &lt;code&gt;rop --grep &amp;quot;pop rdi&amp;quot; -- --nojop --nosys --depth 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;search &lt;code&gt;search -s “/bin/sh”&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;vvmap 虚拟内存映射&lt;/li&gt;
&lt;li&gt;telescope 检查内存转储&lt;/li&gt;
&lt;/ul&gt;
</description>
        
      </item>
      
      <item>
        <title>QEMU的安装使用</title>
        <link>https://vorblock.cc/post/qume%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Thu, 09 Aug 2018 19:34:34 +0800</pubDate>
        
        <guid>https://vorblock.cc/post/qume%E7%9A%84%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</guid>
        <description>

&lt;h1 id=&#34;qemu的安装使用&#34;&gt;QEMU的安装使用&lt;/h1&gt;

&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;

&lt;p&gt;WIndows：&lt;a href=&#34;https://qemu.weilnetz.de/w64/&#34; target=&#34;_blank&#34;&gt;https://qemu.weilnetz.de/w64/&lt;/a&gt; 下载exe安装就行&lt;/p&gt;

&lt;p&gt;MACOS:&lt;code&gt;brew install qemu&lt;/code&gt;  or &lt;code&gt;sudo port install qemu&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;LINUX：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Arch:&lt;/strong&gt; &lt;code&gt;pacman -S qemu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Debian/Ubuntu:&lt;/strong&gt; &lt;code&gt;apt-get install qemu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fedora:&lt;/strong&gt; &lt;code&gt;dnf install @virtualization&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gentoo:&lt;/strong&gt; &lt;code&gt;emerge --ask app-emulation/qemu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RHEL/CentOS:&lt;/strong&gt; &lt;code&gt;yum install qemu-kvm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SUSE:&lt;/strong&gt; &lt;code&gt;zypper install qemu&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;源码安装：&lt;a href=&#34;https://download.qemu.org/&#34; target=&#34;_blank&#34;&gt;https://download.qemu.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;wget&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget https://download.qemu.org/qemu-3.0.0-rc1.tar.xz
tar xvJf qemu-3.0.0-rc1.tar.xz
cd qemu-3.0.0-rc1
./configure
make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git://git.qemu.org/qemu.git
cd qemu
git submodule init
git submodule update --recursive
./configure
make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最新的开发发生在主分支上。稳定的树位于名为“稳定x”的分支中。YY分支,X。YY是发布版本。&lt;/p&gt;

&lt;h3 id=&#34;树莓派内核制作-在windows上&#34;&gt;树莓派内核制作（在windows上)&lt;/h3&gt;

&lt;p&gt;下载树莓派系统：&lt;a href=&#34;http://downloads.raspberrypi.org/raspbian/images/&#34; target=&#34;_blank&#34;&gt;http://downloads.raspberrypi.org/raspbian/images/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载qume 的树莓派内核： &lt;a href=&#34;https://github.com/dhruvvyas90/qemu-rpi-kernel&#34; target=&#34;_blank&#34;&gt;https://github.com/dhruvvyas90/qemu-rpi-kernel&lt;/a&gt;   改名为kernel-qemu放在和系统镜像同目录下&lt;/p&gt;

&lt;p&gt;放在了raspbia目录下&lt;/p&gt;

&lt;p&gt;&lt;code&gt;qemu-system-arm.exe -kernel kernel-qemu -cpu arm1176 -m 512 -M versatilepb -dtbversatile-pb.dtb -no-reboot -append &amp;quot;root=/dev/sda2 panic=1rootfstype=ext4 rw&amp;quot; -net nic -net user,hostfwd=tcp::5022-:22 -hda 2018-06-27-raspbian-stretch.img&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;注意自己下载的镜像版本&lt;/p&gt;

&lt;h3 id=&#34;linux上&#34;&gt;Linux上&lt;/h3&gt;

&lt;p&gt;待补充。。。&lt;/p&gt;
</description>
        
      </item>
      
    </channel>
</rss>