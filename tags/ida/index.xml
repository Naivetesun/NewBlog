<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ida on Vorblock&#39;Blog</title>
    <link>https://naivete.cc/tags/ida/</link>
    <description>Recent content in Ida on Vorblock&#39;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 31 Aug 2018 20:39:26 +0800</lastBuildDate>
    
	<atom:link href="https://naivete.cc/tags/ida/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>IDA 动态调试.so 基本步骤</title>
      <link>https://naivete.cc/2018/08/31/ida-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95.so-%E5%9F%BA%E6%9C%AC%E6%AD%A5%E9%AA%A4/</link>
      <pubDate>Fri, 31 Aug 2018 20:39:26 +0800</pubDate>
      
      <guid>https://naivete.cc/2018/08/31/ida-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95.so-%E5%9F%BA%E6%9C%AC%E6%AD%A5%E9%AA%A4/</guid>
      <description>IDA 动态调试.so 基本步骤  待补图
  0x00 IDA快捷键  Shirt+F12 字符串窗口
 F5大法好 反汇编
 Ctrl+S 查看so对应段的信息（非调试），快速定位so文件的内存地址（Debug）
 G 快速跳转到对应地址。s
 调试-F7单步进入调试、F8单步、F9运行
  0x01 方法一  获取运行Android_server。
  android_server文件放在IDA安装目录下的\dbgsrv目录下 注意版本的不同。
之后只需 push android_server /data/local/tmp/。
之后adb shell，su ，cd /data/local/tmp/。
可能还得chmod 755 android_server 才有权限运行。
 建立通信、attach进程。
  adb forward tcp:23946 tcp:23946命令。
在IDA的Debugger选项中attach进程。
 加载so、找函数下断点
  双开IDA ，Ctrl+S找到so文件的基地址，另外一个IDA找到函数的相对地址。相加得到绝对地址。
0x02 方法二 无法加载so文件需要在加载之前断点。反调试之类
 Debug方式启动app。需要应用可调试开启
  adb shell am start -D -n 包名/.</description>
    </item>
    
  </channel>
</rss>